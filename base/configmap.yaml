kind: ConfigMap
apiVersion: v1
metadata:
  name: moodle-configuration
data:
  config.php: |-
    <?php
      unset($CFG);  // Ignore this line
      global $CFG;  // This is necessary here for PHPUnit execution
      $CFG = new stdClass();
      
      define('DIR_VENDOR', __DIR__ . '/vendor/');
      require_once(DIR_VENDOR . 'autoload.php');

      $CFG->dbtype    = 'mariadb';      // 'pgsql', 'mariadb', 'mysqli', 'sqlsrv' or 'oci'
      $CFG->dblibrary = 'native';     // 'native' only at the moment
      $CFG->dbhost    = 'mariadb.mpizarro-dev.svc.cluster.local';  // eg 'localhost' or 'db.isp.com' or IP
      $CFG->dbname    = 'moodledb';     // database name, eg moodle
      $CFG->dbuser    = 'moodle';   // your database username
      $CFG->dbpass    = 'moodle';   // your database password
      $CFG->prefix    = 'mdl_';       // prefix to use for all table names
      $CFG->dboptions = array(
          'dbpersist' => false,       // should persistent database connections be
                                      //  used? set to 'false' for the most stable
                                      //  setting, 'true' can improve performance
                                      //  sometimes
          'dbsocket'  => false,       // should connection via UNIX socket be used?
                                      //  if you set it to 'true' or custom path
                                      //  here set dbhost to 'localhost',
                                      //  (please note mysql is always using socket
                                      //  if dbhost is 'localhost' - if you need
                                      //  local port connection use '127.0.0.1')
          'dbport'    => '',          // the TCP port number to use when connecting
                                      //  to the server. keep empty string for the
                                      //  default port
          'dbhandlesoptions' => false,// On PostgreSQL poolers like pgbouncer don't
                                      // support advanced options on connection.
                                      // If you set those in the database then
                                      // the advanced settings will not be sent.
          'dbcollation' => 'utf8mb4_unicode_ci',
      );


      $CFG->wwwroot   = 'https://moodle-mpizarro-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com';
      $CFG->sslproxy = 1;


      //=========================================================================
      // 3. DATA FILES LOCATION
      //=========================================================================
      // Now you need a place where Moodle can save uploaded files.  This
      // directory should be readable AND WRITEABLE by the web server user
      // (usually 'nobody' or 'apache'), but it should not be accessible
      // directly via the web.
      //
      // - On hosting systems you might need to make sure that your "group" has
      //   no permissions at all, but that "others" have full permissions.
      //
      // - On Windows systems you might specify something like 'c:\moodledata'

      $CFG->dataroot  = '/opt/app-root/moodledata';

      //=========================================================================
      // 4. DATA FILES PERMISSIONS
      //=========================================================================
      // The following parameter sets the permissions of new directories
      // created by Moodle within the data directory.  The format is in
      // octal format (as used by the Unix utility chmod, for example).
      // The default is usually OK, but you may want to change it to 0750
      // if you are concerned about world-access to the files (you will need
      // to make sure the web server process (eg Apache) can access the files.
      // NOTE: the prefixed 0 is important, and don't use quotes.

      $CFG->directorypermissions = 02777;


      //=========================================================================
      // 5. DIRECTORY LOCATION  (most people can just ignore this setting)
      //=========================================================================
      // A very few webhosts use /admin as a special URL for you to access a
      // control panel or something.  Unfortunately this conflicts with the
      // standard location for the Moodle admin pages.  You can work around this
      // by renaming the admin directory in your installation, and putting that
      // new name here.  eg "moodleadmin".  This should fix all admin links in Moodle.
      // After any change you need to visit your new admin directory
      // and purge all caches.

      $CFG->admin = 'admin';

      $CFG->tool_generator_users_password = 'Pass111!';

      require_once(__DIR__ . '/lib/setup.php'); // Do not edit
---
kind: Secret
apiVersion: v1
metadata:
  name: mariadb
  labels:
    app.openshift.io/runtime: mariadb
    template: mariadb-ephemeral-template
    template.openshift.io/template-instance-owner: 5141732c-e33c-4366-82db-f5775278edc6
  annotations:
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
data:
  database-name: bW9vZGxlZGI=
  database-password: bW9vZGxl
  database-root-password: bW9vZGxl
  database-user: bW9vZGxl
type: Opaque

      
